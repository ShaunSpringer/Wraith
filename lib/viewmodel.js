// Generated by CoffeeScript 1.4.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  this.Wraith.ViewModel = (function(_super) {

    __extends(ViewModel, _super);

    function ViewModel($el, template) {
      var _base, _name, _ref;
      this.$el = $el;
      this.template = template;
      if (Wraith.DEBUG) {
        console.log('@Wraith.View', 'constructor');
      }
      if (!this.$el) {
        throw 'Element is required by View';
      }
      if (!this.template) {
        throw 'Template is required by View';
      }
      ViewModel.__super__.constructor.call(this, this.$el);
      this.$parent = this.$el.parentNode;
      if ((_ref = (_base = Wraith.Templates)[_name = this.template]) == null) {
        _base[_name] = new Wraith.Template(template);
      }
      this.Template = Wraith.Templates[this.template];
    }

    ViewModel.prototype.render = function(model) {
      var $el, rendered;
      rendered = this.Template.render(model);
      $el = document.createElement('div');
      $el.innerHTML = rendered;
      $el = $el.firstChild;
      return $el;
    };

    ViewModel.prototype.updateView = function(model) {
      var $view;
      $view = this.render(model);
      this.$parent.replaceChild($view, this.$el);
      this.$el = $view;
      this.$el.setAttribute('data-model', model.get('_id'));
      return this.bindEvents($view);
    };

    return ViewModel;

  })(this.Wraith.View);

}).call(this);
