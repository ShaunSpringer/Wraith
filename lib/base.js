// Generated by CoffeeScript 1.4.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __slice = [].slice;

  this.Wraith.Base = (function() {

    function Base() {
      this.emit = __bind(this.emit, this);

      this.unbind = __bind(this.unbind, this);

      this.bind = __bind(this.bind, this);
      this.id = Wraith.uniqueId();
      this.listeners = {};
    }

    Base.prototype.bind = function(ev, cb) {
      var list, _base, _ref;
      if (!Wraith.isFunction(cb)) {
        throw 'Callback is not a function';
      }
      list = (_ref = (_base = this.listeners)[ev]) != null ? _ref : _base[ev] = [];
      list.push(cb);
      return this;
    };

    Base.prototype.unbind = function(ev, cb) {
      var callback, i, list, _i, _len, _ref;
      list = (_ref = this.listeners) != null ? _ref[ev] : void 0;
      for (i = _i = 0, _len = list.length; _i < _len; i = ++_i) {
        callback = list[i];
        if (!(callback === cb)) {
          continue;
        }
        list.slice();
        list.splice(i, 1);
        this.listeners[ev] = list;
        break;
      }
      return this;
    };

    Base.prototype.emit = function() {
      var args, event, listener, _i, _len, _ref;
      event = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
      if (this.listeners[event] != null) {
        _ref = this.listeners[event];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          listener = _ref[_i];
          listener.apply(null, args);
        }
      }
      return this;
    };

    Base.proxy = function(func) {
      var _this = this;
      return function() {
        return func.apply(_this, arguments);
      };
    };

    Base.prototype.proxy = function(func) {
      var _this = this;
      return function() {
        return func.apply(_this, arguments);
      };
    };

    return Base;

  })();

}).call(this);
