// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  describe("Bootloader", function() {
    beforeEach(function() {
      return $.ajax({
        async: false,
        dataType: 'html',
        url: 'fixtures/bootloader.html',
        success: function(data) {
          return $('#fixture').append($(data));
        }
      });
    });
    afterEach(function() {
      return $('#fixture').text('');
    });
    return describe("on initialization", function() {
      beforeEach(function() {
        var _ref;
        window.App = {};
        App.TestController = (function(_super) {
          __extends(TestController, _super);

          function TestController() {
            _ref = TestController.__super__.constructor.apply(this, arguments);
            return _ref;
          }

          return TestController;

        })(Wraith.Controller);
        return new Wraith.Bootloader();
      });
      return it("should load all controllers on the page", function() {
        var k, len;
        len = 0;
        for (k in Wraith.controllers) {
          len++;
        }
        return expect(len).toBe(1);
      });
    });
  });

}).call(this);
